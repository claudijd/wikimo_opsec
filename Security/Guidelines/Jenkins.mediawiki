<table>
  <tr>
    <td style="min-width: 25em;">__TOC__</td>
    <td style="vertical-align: top; padding-left: 1em;">
The goal of this document is to help operational teams with the configuration of Jenkins, a continuous integration/delivery application.

All Mozilla sites and deployment should follow the recommendations below.  The Enterprise Information Security (Infosec, formerly
OpSec) team maintains this document as a reference guide for operational teams.

Updates to this page should be submitted to the [https://github.com/mozilla/wikimo_opsec/ source repository on github].
Changes are detailed in the [https://github.com/mozilla/wikimo_opsec/commits/master commit history].

<span style="float: right; padding-top: 3em;">[[File:OpSec.png|300px]]</span>
    </td>
  </tr>
</table>

= Jenkins-CI =
== HTTP ==
=== Transport Encryption ===
By default, the Jenkins web administration console is served over HTTP.  This allows a MiTM attacker to steal Jenkins administrative credentials.  To combat this, all Jenkins web applications should be served over HTTPS using a certificate for a trusted certificate authority.  If purchasing an certificate is deemed cost prohibitive, certificates can be obtained *FREE* from [https://letsencrypt.org/ Let's Encrypt].

Additional configuration is required on the server instance to control the various TLS configuration settings that the Jenkins instance will support.  Any new Jenkins installations should implement a MODERN TLS configuration, as defined by the [https://wiki.mozilla.org/Security/Server_Side_TLS Mozilla Server Side TLS guide].  Mozilla also provides an [https://mozilla.github.io/server-side-tls/ssl-config-generator/ SSL configuration generator] to assist you in building of a MODERN configuration for your chosen web server to host Jenkins with.

=== Sensitive Path Restrictions ===
There are a number of URL paths in Jenkins that expose attack surface on a Jenkins installation that you may not want, but are not often configurable within the application.  Depending on your specific use case of Jenkins, you may choose to block one or more of these paths to reduce this attack surface, which are commonly used by attackers to exploit configuration flaws and/or gather information that could be later used to assist in other types of attacks.

Please note that the following paths are relative to the Jenkins application root.  So if you're Jenkins installation is reachable at /jenkins instead of the default /, you may need to make substitutions accordingly:

  ./script
  ./view/All/newJob
  ./asynchPeople
  ./systemInfo
  ./api
  ./restart
  ./quietDown
  ./user/jenkins
  ./jnlpJars
  ./asynchPeople
  ./credential-store
  ./job/[job_name]/[build_number]/injectedEnvVars/

Such path restrictions can be implemented in any modern web server technology.  For example, this is how you can perform such path restrictions in nginx using the location directive:

  # Restrict access to the following paths
  location ^~ /(api|restart|quietDown|user/jenkins|jnlpJars|script|asynchPeople|credential-store|systemInfo|view/All/newJob) {
    deny    all;
  }
  # Restrict access to injectedEnvVars paths
  location ~* ^.+/injectedEnvVars/$ {
    deny    all;
  }

It is recommended that you start with the full list of restricted paths and then remove restrictions as necessary to fit your desired use case.  Additionally, you may also consider restricting some paths by source IP to provide additional paths for users sourcing from specific source networks, such as those originating from an internal/VPN network.

=== Password Masking ===
*TODO* - Ensure masking is enabled on all passwords.  In cases where this is not enabled, enable it and consider rotating the credentials.
=== Authentication ===
*TODO* - LDAP and MFA strategy vs. user/pass, don't allow users to sign up, always require auth
=== Authorization ===
*TODO* - Use a matrix based security (this gives you options)
== CSRF Protection ==
*TODO* - enable this out of the box

== SSH ==
=== Transport Encryption ===
*TODO* - Basically, see OpenSSH guidelines (use key auth)
=== Tunneling ===
*TODO* - Have users tunnel their traffic for sensitive paths

== Architecture ==
*TODO* - Discuss the trust model in Jenkins a bit further
=== Security Zones ===
*TODO* - Don't run different trust levels on the same build target (ie. test/build/sign/push)
=== Job Isolation ===
*TODO* - Don't run anything on the master node, use slaves and containers for better OS isolation and repeatability
=== Secret Management ===
*TODO*

== Maintenance ==
=== Advisory Notification ===
*TODO* - Jenkins provides a mailing list for anyone who's managing a Jenkins instance.  They also provide pre-notification for advisories and you can sign up to receive them here for planning purposes.
=== Security Updates ===
*TODO* - address core upgrade and plugin upgrades
=== Job Pruning ===
*TODO*
=== Job Creep ===
*TODO*

= Appendixes =
== Reference documents ==

* [https://wiki.jenkins-ci.org/display/JENKINS/Jenkins+Best+Practices]
* [https://wiki.jenkins-ci.org/display/JENKINS/Securing+Jenkins]
* [https://wiki.mozilla.org/Security/Server_Side_TLS Server Side TLS]
* [https://wiki.mozilla.org/Security/Guidelines/OpenSSH]
* [https://speakerdeck.com/javuto/security-at-scale-2015-building-open-source-software-for-security]
* [https://speakerdeck.com/claudijd/attacking-cloud-services-with-source-code]
